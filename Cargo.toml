[package]
name = "av-scenechange"
version = "0.18.0"
authors = ["Josh Holmer <jholmer.in@gmail.com>"]
edition = "2024"
rust-version = "1.86"
description = "Estimates frames in a video where a scenecut would be ideal"
license = "MIT"
repository = "https://github.com/rust-av/av-scenechange"
build = "build.rs"
exclude = [".github/*", "benches", "test_files"]

[dependencies]
aligned = "0.4.2"
anyhow = "1.0.100"
arrayvec = "0.7.6"
av-decoders = { version = "0.5.0" }
cfg-if = "1.0.4"
clap = { version = "4.5.51", optional = true, features = ["derive"] }
console = { version = "0.16.1", optional = true }
cpufeatures = "0.2.17"
fern = { version = "0.7.1", optional = true }
libc = { version = "0.2.177", optional = true }
log = { version = "0.4.28" }
num-rational = { version = "0.4.2", default-features = false }
num-traits = "0.2.19"
rayon = "1.11.0"
serde = { version = "1.0.228", optional = true, features = ["derive"] }
serde_json = { version = "1.0.145", optional = true }
thiserror = "2.0.17"
tracing = { version = "0.1.41", optional = true }
tracing-chrome = { version = "0.7.2", optional = true }
tracing-subscriber = { version = "0.3.20", optional = true }
v_frame = "0.3.9"
y4m = "0.8.0"

[build-dependencies]
cc = { version = "1.2.43", optional = true, features = ["parallel"] }
nasm-rs = { version = "0.3.1", optional = true, features = ["parallel"] }

[dev-dependencies]
criterion = "0.7.0"

[features]
default = ["binary", "asm"]
binary = ["clap", "serialize"]
serialize = ["serde", "serde_json"]
devel = ["console", "fern"]
ffmpeg = ["av-decoders/ffmpeg"]
vapoursynth = ["av-decoders/vapoursynth"]
tracing = ["tracing-subscriber", "tracing-chrome", "dep:tracing"]
asm = ["nasm-rs", "cc", "libc"]

[[bin]]
name = "av-scenechange"
path = "src/main.rs"
required-features = ["binary"]

[lints.rust]
missing_docs = "warn"
unsafe_op_in_unsafe_fn = "allow"

[lints.clippy]
doc_link_with_quotes = "warn"
doc_markdown = "warn"
inline_always = "warn"
missing_errors_doc = "warn"
missing_inline_in_public_items = "warn"
missing_panics_doc = "warn"
uninlined_format_args = "allow"


[lints.rust.unexpected_cfgs]
level = "warn"
# These custom cfgs are expected, so tell rustc not to output warnings for them
check-cfg = ['cfg(asm_x86_64)', 'cfg(asm_neon)']

[[bench]]
name = "scd_bench"
harness = false
